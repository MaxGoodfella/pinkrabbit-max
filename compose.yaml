services:

  rabbitmq:
    build: .
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "15692:15692"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - rabbitmq_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - rabbitmq_network
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9090/-/healthy" ]
      interval: 10s
      retries: 5
      timeout: 5s

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - rabbitmq_network
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 10s
      retries: 5
      timeout: 5s

  producer:
    build: ./producer
    container_name: producer
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_network
    env_file:
      - .env

  consumer:
    build: ./consumer
    container_name: consumer
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_network
    env_file:
      - .env

volumes:
  rabbitmq_data:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  rabbitmq_network:
    driver: bridge